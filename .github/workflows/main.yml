name: "Release"

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [3.1.20, 5.0.11, 6.0.0]
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Prepare
        id: prep
        shell: bash
        run: |
          curl -L -o jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          chmod +x jq
          DOCKER_IMAGE=ghcr.io/sitkoru/dotnet-runtime
          VERSION=${{ matrix.version }}
          echo VERSION=${VERSION}
          MAJOR=`echo $VERSION | cut -d. -f1`
          echo MAJOR=${MAJOR}
          MINOR=`echo $VERSION | cut -d. -f2`
          echo MINOR=${MINOR}
          DOTNET_RELEASE_URL=https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/${MAJOR}.${MINOR}/releases.json
          echo DOTNET_RELEASE_URL=${DOTNET_RELEASE_URL}
          curl -L -o releases.json ${DOTNET_RELEASE_URL}
          RUNTIME_VERSION=$(cat releases.json | ./jq -r ".releases[] | select(.\"release-version\"==\"${VERSION}\").runtime.\"version-display\"")
          echo RUNTIME_VERSION=${RUNTIME_VERSION}
          SDK_VERSION=${MAJOR}.${MINOR}
          echo SDK_VERSION=${SDK_VERSION}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=runtime_version::${RUNTIME_VERSION}
          echo ::set-output name=sdk_version::${SDK_VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Base
        uses: docker/build-push-action@v2.7.0
        with:
          push: false
          context: .
          file: ./Dockerfile
          target: base
          build-args: |
            RUNTIME_VERSION=${{ steps.prep.outputs.runtime_version }}
            SDK_VERSION=${{ steps.prep.outputs.sdk_version }}
      - name: Chrome deps
        uses: docker/build-push-action@v2.7.0
        with:
          push: false
          context: .
          file: ./Dockerfile
          target: chrome-deps
          build-args: |
            RUNTIME_VERSION=${{ steps.prep.outputs.runtime_version }}
            SDK_VERSION=${{ steps.prep.outputs.sdk_version }}
      - name: Newrelic
        uses: docker/build-push-action@v2.7.0
        with:
          push: false
          context: .
          file: ./Dockerfile
          target: newrelic
          build-args: |
            RUNTIME_VERSION=${{ steps.prep.outputs.runtime_version }}
            SDK_VERSION=${{ steps.prep.outputs.sdk_version }}
      - name: Chrome-Newrelic
        uses: docker/build-push-action@v2.7.0
        with:
          push: false
          context: .
          file: ./Dockerfile
          target: chrome-deps-newrelic
          build-args: |
            RUNTIME_VERSION=${{ steps.prep.outputs.runtime_version }}
            SDK_VERSION=${{ steps.prep.outputs.sdk_version }}
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install node.js
        uses: actions/setup-node@v2.5.0
        with:
          node-version: '16'
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @sitkoru/semantic-release-config
            @semantic-release/changelog
            @semantic-release/git
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_EMAIL }}